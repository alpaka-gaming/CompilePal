<controls:MetroWindow x:Class="CompilePalX.LaunchWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        Title="Game Selector" Height="444" Width="640"
                      BorderBrush="{DynamicResource MahApps.Brushes.Accent}" BorderThickness="1"
                      IconEdgeMode="Aliased" Icon="..\CompilePalIcon.ico" ShowIconOnTitleBar="False" >
    <controls:MetroWindow.WindowButtonCommands>
        <controls:WindowButtonCommands LightCloseButtonStyle="{StaticResource LightButtonStyle}" LightMinButtonStyle="{StaticResource LightButtonStyle}" LightMaxButtonStyle="{StaticResource LightButtonStyle}"/>
    </controls:MetroWindow.WindowButtonCommands>

    <Grid>
        <StackPanel Margin="10, 0, 10, 40" VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="EmptyState">
            <Grid HorizontalAlignment="Center" Margin="0, -40, 0, 20">
                <iconPacks:Material Kind="HelpRhombus" Height="40" Width="40"/>
            </Grid>
            <TextBlock HorizontalAlignment="Center" FontWeight="Bold" FontSize="14">No Game Configurations Found</TextBlock>
            <TextBlock HorizontalAlignment="Center" Margin="0, 5, 0,10">Launch Hammer for the game you want to compile for and click <Hyperlink Foreground="{StaticResource CompilePal.Brushes.Link}" Click="RefreshButton_OnClick">refresh</Hyperlink></TextBlock>
            <TextBlock HorizontalAlignment="Center" FontWeight="Bold" FontSize="14">Or</TextBlock>
            <Button Margin="0, 10, 0, 0" Click="AddButton_OnClick">Add Game</Button>
        </StackPanel>
        <Grid x:Name="FilledState">
            <Grid Margin="10, 10, 10, 40">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <DataGrid x:Name="GameGrid" Margin="0,0,5,0" HorizontalContentAlignment="Stretch" AutoGenerateColumns="False" CanUserAddRows="False" ItemsSource="{Binding}" MouseDoubleClick="Button_Click" SelectionMode="Single">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Name" Binding="{ Binding Name}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Path" Binding="{ Binding GameFolder}" IsReadOnly="True" Width="*"/>
                        <DataGridTemplateColumn Width="auto" CanUserResize="False">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Name="GameKebabButton" Height="5" Width="auto" Padding="0" Margin="0, -8, 0, -8" Visibility="Visible" Foreground="White" controls:ControlsHelper.CornerRadius="0" controls:ControlsHelper.FocusBorderThickness="0" ContextMenuOpening="GameKebabButton_OnContextMenuOpening" Click="GameKebabButton_OnClick">
                                        <iconPacks:PackIconMaterial Kind="DotsVertical" Height="8" Width="8"/>
                                        <Button.ContextMenu>
                                            <ContextMenu Name="PresetActionMenu" Placement="Bottom">
                                                <MenuItem Header="Edit" Click="EditButton_OnClick" />
                                                <MenuItem Header="Delete" Click="DeleteButton_OnClick"/>
                                            </ContextMenu>
                                        </Button.ContextMenu>
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}"
                                                   BasedOn="{StaticResource {x:Type Button}}">
                                                <Setter Property="Background" Value="Transparent" />
                                                <Setter Property="BorderThickness" Value="0" />

                                                <!-- #region HorribleHackForBackgroundHoverColor -->
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                            <Grid>
                                                                <Border x:Name="Border"
                                                                        Background="{TemplateBinding Background}"
                                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                                        CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ControlsHelper.CornerRadius), Mode=OneWay}"
                                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                <Border x:Name="DisabledVisualElement"
                                                                        Background="{DynamicResource ControlsDisabledBrush}"
                                                                        CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ControlsHelper.CornerRadius), Mode=OneWay}"
                                                                        IsHitTestVisible="False"
                                                                        Opacity="0"
                                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                <controls:ContentControlEx
                                                                    x:Name="PART_ContentPresenter"
                                                                    Margin="{TemplateBinding BorderThickness}"
                                                                    Padding="{TemplateBinding Padding}"
                                                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                    Content="{TemplateBinding Content}"
                                                                    ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ControlsHelper.ContentCharacterCasing)}"
                                                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                                    RecognizesAccessKey="True"
                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter TargetName="Border"
                                                                            Property="Background"
                                                                            Value="{DynamicResource GrayBrush8}" />
                                                                    <!-- set it to what you need -->
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter TargetName="Border"
                                                                            Property="Background"
                                                                            Value="{DynamicResource GrayBrush7}" />
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocusWithin"
                                                                         Value="True">
                                                                    <Setter TargetName="Border"
                                                                            Property="BorderBrush"
                                                                            Value="{DynamicResource ButtonMouseOverBorderBrush}" />
                                                                    <!--
                                                                        <Setter TargetName="Border"
                                                                            Property="BorderThickness" Value="2" />
                                                                    -->
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter TargetName="DisabledVisualElement"
                                                                            Property="Opacity" Value="0.7" />
                                                                    <Setter TargetName="PART_ContentPresenter"
                                                                            Property="Opacity" Value="0.3" />
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <!-- #endregion -->

                                                <Style.Triggers>
                                                    <Trigger Property="IsFocused" Value="True">
                                                        <Setter Property="Background">
                                                            <Setter.Value>
                                                                <SolidColorBrush
                                                                    Color="{StaticResource MahApps.Colors.Gray10}"
                                                                    Opacity="0.25" />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background">
                                                            <Setter.Value>
                                                                <SolidColorBrush
                                                                    Color="{StaticResource MahApps.Colors.Gray10}"
                                                                    Opacity="0.4" />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Trigger>
                                                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                        <Setter Property="Background">
                                                            <Setter.Value>
                                                                <SolidColorBrush
                                                                    Color="{StaticResource MahApps.Colors.Gray10}"
                                                                    Opacity="0.25" />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Background">
                                                            <Setter.Value>
                                                                <SolidColorBrush
                                                                    Color="{StaticResource MahApps.Colors.Gray10}"
                                                                    Opacity="0.25" />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.HeaderStyle>
                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </Style>
                            </DataGridTemplateColumn.HeaderStyle>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
                <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Top" Margin="0, -1, 0, 0" HorizontalAlignment="Right">
                    <Button Name="RefreshButton" Margin="0, 0, 5, 0" Height="20" Width="25" Padding="-4" VerticalAlignment="Top" Click="RefreshButton_OnClick" ToolTip="Refresh Game Configurations"><iconPacks:Material Kind="Refresh" Height="13" Width="13"/></Button>
                    <Button Name="AddButton" Height="20" Width="25" Padding="-4" VerticalAlignment="Top" Click="AddButton_OnClick" ToolTip="Add Game Configuration"><iconPacks:Material Kind="Plus" Height="13" Width="13"/></Button>
                </StackPanel>
            </Grid>
            <Button Name="LaunchButton" Content="Launch" Margin="0,0,10,10" Height="25" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="75" Click="Button_Click" IsEnabled="{Binding ElementName=GameGrid, Path=SelectedItems.Count}"/>
        </Grid>
    </Grid>
</controls:MetroWindow>
